# Docker Compose for Kosera API Development

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: kosera-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kosera
      POSTGRES_USER: kosera
      POSTGRES_PASSWORD: kosera123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - kosera-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kosera -d kosera"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Test Database (Isolated)
  db_test:
    image: postgres:16-alpine
    container_name: kosera-db-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: kosera_test
      POSTGRES_USER: kosera
      POSTGRES_PASSWORD: kosera123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - kosera-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kosera -d kosera_test"]
      interval: 20s
      timeout: 5s
      retries: 10

  # Next.js Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: kosera-app
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://kosera:kosera123@db:5432/kosera
      - JWT_SECRET=your-super-secret-jwt-key-for-development
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kosera-network
    command: ["npm", "run", "dev"]

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kosera-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kosera.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - kosera-network

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  kosera-network:
    driver: bridge
