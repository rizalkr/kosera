name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Lint, Type Check, Test, Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        # Static test creds (non-sensitive). Ensure they match your DATABASE_URL secret.
        env:
          POSTGRES_USER: kosera
          POSTGRES_PASSWORD: password
          POSTGRES_DB: kosera
        options: >-
          --health-cmd "pg_isready -U kosera" \
          --health-interval 5s \
          --health-timeout 5s \
          --health-retries 12

    env:
      NEXT_TELEMETRY_DISABLED: '1'
      CI: 'true'
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h postgres -p 5432 -U kosera; then
              echo "Postgres is ready"; break; fi; sleep 2; done

      - name: Apply migrations
        run: npx drizzle-kit push

      - name: Lint
        run: npm run lint

      - name: Type Check
        run: npx tsc --noEmit

      - name: Run Tests
        run: npm run test

      - name: Build
        run: npm run build

      - name: Upload Build Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
          retention-days: 7

  # Optional release job (disabled by default). Enable when release workflow is defined.
  # release:
  #   name: Release
  #   needs: build-test
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20.x
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build
  #       run: npm run build
  #     - name: Publish (placeholder)
  #       run: echo "Add publish/release logic here (e.g., docker push, vercel deploy, semantic-release)"
